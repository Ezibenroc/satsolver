###########################################
# Software versions and compiler options
###########################################

cmake_minimum_required (VERSION 2.6)
project(satsolver)
set(PROJECT_SOURCE_DIR ${CMAKE_SOURCE_DIR}/src)
set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/CMakeModules)

find_package(BISON)
find_package(FLEX)

add_definitions(-std=c++0x -O2)
add_definitions(-g -Wall -Wextra -Werror -pedantic
    -Wcast-qual -Wcast-align -Wconversion -Wdouble-promotion -Wfloat-equal
    -Wpointer-arith -Woverloaded-virtual -Weffc++ -Wold-style-cast -Wunused
    -Wstrict-aliasing -Wstrict-overflow -Wunsafe-loop-optimizations
    -Wconversion -Wlogical-op -Wdisabled-optimization
    -fmax-errors=2)
#add_definitions(-Wsuggest-attribute=const -Wsuggest-attribute=noreturn -Wsuggest-attribute=pure -Wsign-conversion -Winline)
set(FLEX_FLAGS "-Wno-conversion -Wno-old-style-cast -Wno-sign-conversion -Wno-unused-function -Wno-suggest-attribute=pure")
set(BISON_FLAGS "-Wno-conversion -Wno-old-style-cast -Wno-sign-conversion -Wstrict-overflow=1")

include_directories ("${PROJECT_SOURCE_DIR}")
include_directories("${CMAKE_CURRENT_BINARY_DIR}")


###########################################
# Main source code
###########################################


# Structures
############

add_library(Affectation src/structures/affectation.cpp)
add_library(Clause src/structures/clause.cpp)
add_library(Formula src/structures/formula.cpp)
target_link_libraries(Formula Clause Affectation)
add_library(ExtendedFormula src/structures/extended_formula.cpp)
add_library(ColorAffectation src/structures/color_affectation.cpp)
add_library(Graph src/structures/graph.cpp)
add_library(AdjGraph src/structures/adj_graph.cpp)
add_library(UnionFind src/structures/union_find.cpp)
add_library(CLProof src/structures/CL_proof.cpp)
add_library(Deductions src/structures/deductions.cpp)
add_library(DifferenceAtom src/structures/difference_atom.cpp)
add_library(CongruenceAtom src/structures/congruence_atom.cpp)
add_library(EqualityAtom src/structures/equality_atom.cpp)

file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/structures.cpp "")
add_library(Structures ${CMAKE_CURRENT_BINARY_DIR}/structures.cpp)
target_link_libraries(Structures Formula Clause Affectation ColorAffectation Graph AdjGraph UnionFind ExtendedFormula CLProof Deductions DifferenceAtom CongruenceAtom EqualityAtom)
set_directory_properties(PROPERTY ADDITIONAL_MAKE_CLEAN_FILES ${CMAKE_CURRENT_BINARY_DIR}/structures.cpp)


# Parsers
#########

add_library(CommandLineParser src/parsers/cli.cpp)

add_library(AbstractParser src/parsers/abstract.cpp)
add_library(SatParser src/parsers/sat.cpp)
target_link_libraries(SatParser AbstractParser Clause Formula)

add_library(GraphParser src/parsers/graph.cpp)
target_link_libraries(GraphParser AbstractParser Graph)

find_package(BISON)
find_package(FLEX)

bison_target(ExtendedFormulaYacc src/parsers/extended_formula.y ${CMAKE_CURRENT_BINARY_DIR}/extended_formula.y.cpp)
bison_target(DifferenceYacc src/parsers/difference.y ${CMAKE_CURRENT_BINARY_DIR}/difference.y.cpp)
bison_target(CongruenceYacc src/parsers/congruence.y ${CMAKE_CURRENT_BINARY_DIR}/congruence.y.cpp)
bison_target(EqualityYacc src/parsers/equality.y ${CMAKE_CURRENT_BINARY_DIR}/equality.y.cpp)
flex_target(ExtendedFormulaLex src/parsers/extended_formula.l ${CMAKE_CURRENT_BINARY_DIR}/extended_formula.l.cpp)
flex_target(DifferenceLex src/parsers/difference.l ${CMAKE_CURRENT_BINARY_DIR}/difference.l.cpp)
flex_target(CongruenceLex src/parsers/congruence.l ${CMAKE_CURRENT_BINARY_DIR}/congruence.l.cpp)
flex_target(EqualityLex src/parsers/equality.l ${CMAKE_CURRENT_BINARY_DIR}/equality.l.cpp)
add_flex_bison_dependency(ExtendedFormulaLex ExtendedFormulaYacc)
add_flex_bison_dependency(DifferenceLex DifferenceYacc)
add_flex_bison_dependency(CongruenceLex CongruenceYacc)
add_flex_bison_dependency(EqualityLex EqualityYacc)
add_library(ExtendedFormulaParser ${BISON_ExtendedFormulaYacc_OUTPUTS} ${FLEX_ExtendedFormulaLex_OUTPUTS})
add_library(DifferenceParser ${BISON_DifferenceYacc_OUTPUTS} ${FLEX_DifferenceLex_OUTPUTS})
add_library(CongruenceParser ${BISON_CongruenceYacc_OUTPUTS} ${FLEX_CongruenceLex_OUTPUTS})
add_library(EqualityParser ${BISON_EqualityYacc_OUTPUTS} ${FLEX_EqualityLex_OUTPUTS})
target_link_libraries(ExtendedFormulaParser ${FLEX_LIBRARIES} ${BISON_LIBRARIES})
target_link_libraries(DifferenceParser ${FLEX_LIBRARIES} ${BISON_LIBRARIES})
target_link_libraries(CongruenceParser ${FLEX_LIBRARIES} ${BISON_LIBRARIES})
target_link_libraries(EqualityParser ${FLEX_LIBRARIES} ${BISON_LIBRARIES})

# Disable warnings for files generated by Flex and Bison…
set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/extended_formula.l.cpp PROPERTIES COMPILE_FLAGS ${FLEX_FLAGS})
set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/extended_formula.y.cpp PROPERTIES COMPILE_FLAGS ${BISON_FLAGS})
set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/difference.l.cpp PROPERTIES COMPILE_FLAGS ${FLEX_FLAGS})
set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/difference.y.cpp PROPERTIES COMPILE_FLAGS ${BISON_FLAGS})
set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/congruence.l.cpp PROPERTIES COMPILE_FLAGS ${FLEX_FLAGS})
set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/congruence.y.cpp PROPERTIES COMPILE_FLAGS ${BISON_FLAGS})
set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/equality.l.cpp PROPERTIES COMPILE_FLAGS ${FLEX_FLAGS})
set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/equality.y.cpp PROPERTIES COMPILE_FLAGS ${BISON_FLAGS})

file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/parsers.cpp "")
add_library(Parsers ${CMAKE_CURRENT_BINARY_DIR}/parsers.cpp)
target_link_libraries(Parsers SatParser GraphParser ExtendedFormulaParser DifferenceParser CongruenceParser CongruenceAtom DifferenceAtom EqualityParser EqualityAtom)
set_directory_properties(PROPERTY ADDITIONAL_MAKE_CLEAN_FILES ${CMAKE_CURRENT_BINARY_DIR}/parsers.cpp)


# Solvers
#########

add_library(VoidAssistant src/solvers/void_assistant.cpp)
add_library(DifferenceAssistant src/solvers/difference_assistant.cpp)
target_link_libraries(DifferenceAssistant Formula DifferenceAtom ExtendedFormula AdjGraph)
add_library(CongruenceAssistant src/solvers/congruence_assistant.cpp)
target_link_libraries(CongruenceAssistant Formula CongruenceAtom ExtendedFormula AdjGraph)
add_library(EqualityAssistant src/solvers/equality_assistant.cpp)
target_link_libraries(EqualityAssistant Formula EqualityAtom ExtendedFormula AdjGraph)

add_library(DPLL src/solvers/dpll.cpp)
target_link_libraries(DPLL Structures VoidAssistant)

add_library(TseitinSolver src/solvers/tseitin.cpp)
target_link_libraries(TseitinSolver Structures)

add_library(GraphColorSolver src/solvers/graphcolor.cpp)
target_link_libraries(GraphColorSolver Structures DPLL)

file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/solvers.cpp "")
add_library(Solvers ${CMAKE_CURRENT_BINARY_DIR}/solvers.cpp)
target_link_libraries(Solvers DifferenceAssistant CongruenceAssistant EqualityAssistant DPLL GraphColorSolver TseitinSolver)
set_directory_properties(PROPERTY ADDITIONAL_MAKE_CLEAN_FILES ${CMAKE_CURRENT_BINARY_DIR}/solvers.cpp)


add_executable(resol src/entry_points/resol.cpp)
target_link_libraries(resol Affectation Formula SatParser CommandLineParser DPLL)

add_executable(colorie src/entry_points/colorie.cpp)
target_link_libraries(colorie GraphParser CommandLineParser GraphColorSolver)

add_executable(tseitin src/entry_points/tseitin.cpp)
target_link_libraries(tseitin CommandLineParser ExtendedFormula Formula DPLL ExtendedFormulaParser TseitinSolver)

add_executable(resol_diff src/entry_points/resol_diff.cpp)
target_link_libraries(resol_diff CommandLineParser ExtendedFormula Formula DPLL DifferenceParser TseitinSolver DifferenceAssistant)

#add_executable(resol_congru src/entry_points/resol_congru.cpp)
#target_link_libraries(resol_congru CommandLineParser ExtendedFormula Formula DPLL CongruenceParser TseitinSolver CongruenceAssistant)

add_executable(resol_equal src/entry_points/resol_equal.cpp)
target_link_libraries(resol_equal CommandLineParser ExtendedFormula Formula DPLL EqualityParser TseitinSolver EqualityAssistant)



###########################################
# Benchmarks
###########################################

file(GLOB HelperFiles ${CMAKE_SOURCE_DIR}/benchmarks/* ${CMAKE_SOURCE_DIR}/benchmarks_results/rendu*/* ${CMAKE_SOURCE_DIR}/check_result.py)

add_custom_target(Helpers SOURCES ${HelperFile})
foreach(HelperFile ${HelperFiles})
    add_custom_command(TARGET Helpers PRE_BUILD
                       COMMAND ${CMAKE_COMMAND} -E copy ${HelperFile} ${CMAKE_CURRENT_BINARY_DIR})
endforeach()

add_custom_target(generator ALL
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/generator.ml ${CMAKE_CURRENT_BINARY_DIR}
    COMMAND ocamlopt ${CMAKE_CURRENT_BINARY_DIR}/generator.ml -o ${CMAKE_CURRENT_BINARY_DIR}/generator
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    SOURCES ${CMAKE_SOURCE_DIR}/generator.ml)
set_directory_properties(PROPERTY ADDITIONAL_MAKE_CLEAN_FILES "${CMAKE_CURRENT_BINARY_DIR}/generator;${CMAKE_CURRENT_BINARY_DIR}/generator.cmi;${CMAKE_CURRENT_BINARY_DIR}/generator.cmo;${CMAKE_CURRENT_BINARY_DIR}/generator.cmx;${CMAKE_CURRENT_BINARY_DIR}/generator.o")
add_custom_target(Benchmarks ALL
                  DEPENDS Helpers resol colorie tseitin generator)

###########################################
# Unit tests
###########################################

find_package(CppUnit)
if (CPPUNIT_FOUND)

    add_executable(testrunner tests/main.cpp tests/structures_tests.cpp tests/heuristics_tests.cpp tests/dpll_tests.cpp tests/satparser_tests tests/graphparser_tests.cpp tests/graphsolver_tests.cpp tests/theory_tests.cpp)
    target_link_libraries(testrunner Structures Parsers Solvers)
    target_link_libraries(testrunner cppunit)
else (CPPUNIT_FOUND)
    message("+---------------------------------------------+")
    message("| CppUnit not found, tests won’t be compiled. |")
    message("+---------------------------------------------+")
endif (CPPUNIT_FOUND)

###########################################
# Archive
###########################################

add_custom_target(archive
    COMMAND git archive --prefix=satsolver_Cornebize_Lorentz/ -o satsolver_Cornebize_Lorentz_rendu4.tar master
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    SOURCES ${CMAKE_SOURCE_DIR}/)
